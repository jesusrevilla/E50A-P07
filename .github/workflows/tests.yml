name: Pruebas unitarias y funcionales

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: escuela
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4    


      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client build-essential libpq-dev git

      - name: Clone pg_cron repository
        run: git clone https://github.com/citusdata/pg_cron.git

      - name: Build and install pg_cron
        run: |
          cd pg_cron
          make
          sudo make install        

      - name: Configure PostgreSQL
        run: |
          echo "shared_preload_libraries = 'pg_cron'" >> /var/lib/postgresql/data/postgresql.conf
          sudo systemctl restart postgresql          


      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432; do sleep 1; done


      - name: Cargar esquema de la base de datos
        run: |
          psql -h localhost -U postgres -d testdb -f scripts.sql  2>&1 | tee sql_log.txt 
        env:
          PGPASSWORD: postgres

      - name: Install pg_cron extension
        run: |
          psql -h localhost -U postgres -d escuela -c "CREATE EXTENSION pg_cron;"
        env:
          PGPASSWORD: postgres

      - name: Schedule purge job
        run: |
          psql -h localhost -U postgres -d escuela -c "SELECT cron.schedule('Purgar Asistencia', '0 0 1 */6 *', 'CALL purgar_asistencia()');"
        env:
          PGPASSWORD: postgres          

      - name: Test tables creation
        run: |
          if [ $(grep -c "CREATE TABLE" sql_log.txt) -lt 4 ]; then
            echo "Menos de 4 tablas creadas"
            exit 1
          else
            echo "La creación de tablas es de al menos 4 (OK)"
          fi          

      - name: Test insertions of 5 records
        run: |
          if [ $(grep -c "INSERT 0 5" sql_log.txt) -lt 5 ]; then
            echo "Menos de 5 inserciones de 5 registros"
            exit 1
          else
            echo "Cantidad de inserciones de 5 registros OK"
          fi     

      - name: Test insertions of 1 records
        run: |
          if [ $(grep -c "INSERT 0 1" sql_log.txt) -lt 1 ]; then
            echo "Menos de una iserción de un registro."
            exit 1
          else
            echo "Cantidad de inserciones de un renglón OK"
          fi    
          
      - name: Test query clientes con nombre que comienza con A 
        run: |        
          if grep -Pzo "cliente_id \|  nombre   \|        email        \n------------\+-----------\+---------------------\n          1 \| Ana Pérez \| ana.perez@gmail.com\n\(1 row\)" sql_log.txt; then
            echo "La selección de cliente con nombre que comienza con A está bien."
          else
            echo "El archivo no contiene el texto especificado."
            exit 1
          fi
                
